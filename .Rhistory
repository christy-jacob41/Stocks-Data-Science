R[[228]]
R[[240]]
R[[252]]
R[[264]]
R[[276]]
R[[288]]
R[[300]]
R[[312]]
R[[324]]
R[[336]]
R[[341]]
View(Ra)
SMA(Cl(SPY))
SMA(Cl(SPY), 20)
?SMA
SMA(Ra, 20)
SMA(Cl(SPY), n=20)
SMA(Cl(SPY), n=200)
SMA(Cl(SPY), n=20)
SMA(Cl(SPY), n=30)
Rb <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>% SMA(Cl(SPY), 20) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
col_rename = "Ra")
Rb
tq_mutate_fun_options()
View(SPY)
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute(x=close,
mutate_fun = SMA,
period     = "monthly",
col_rename = "Ac")
Ac
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute(x= close, y= volume,
mutate_fun = SMA,
period     = "monthly",
col_rename = "Ac")
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute(x= close, y= volume,
mutate_fun = SMA,
col_rename = "Ac")
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute(x= close, y= volume,
mutate_fun = EVWMA,
col_rename = "Ac")
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute_xy_(x= close,
mutate_fun = SMA,
col_rename = "Ac")
View(SPY)
Ac <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
tq_transmute_xy_(x= close,
mutate_fun = SMA)
Ac
SPY_prices <-  tq_get("SPY", get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07")
View(SPY_prices)
tq_mutate_xy_(SPY_pricess, x = close, mutate_fun = SMA)
tq_mutate_xy_(SPY_prices, x = close, mutate_fun = SMA)
col_name <- "close"
mutate <- c("MACD", "SMA")
tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]])
View(SPY_prices)
tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]]) %>%
tq_transmute(mutate_fun = periodReturn,
period     = "monthly")
tq_mutate_fun_options()
tq_transmute(mutate_fun = to.monthly
tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]]) %>%
tq_transmute(mutate_fun = to.monthly)
SPY_prices <- tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]]) %>%
tq_transmute(SPY_prices, mutate_fun = to.monthly)
SPY_prices <- tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]])
tq_transmute(SPY_prices, mutate_fun = to.monthly)
A[1] <- 1000
A <- c(1000,0)
A[1] <- 1000
R[[1]]
R[[2]]
R[[12]]
R[[1]]
R[[2]]
SPY_prices <- tq_transmute(SPY_prices, mutate_fun = to.monthly)
R[[1]]
A[[1]] <- 1000
# we couldn't get the SMA at the end of January 1991 the way we implemented it, so we assumed to invest
A[[2]] <- 2000 + 1000 * (Ra[2,3])
A
R[[2]]
for(i in 2:341)
{
if(SPY_prices[i,5]>SPY_prices[i,8])
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
A
for(i in 2:341)
{
if(SPY_prices[i,5] > SPY_prices[i,8])
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
for(i in 2:341)
{
x <- SPY_prices[i,5] > SPY_prices[i,8]
}
x
x <- c(TRUE, FALSE)
x <- c(TRUE, FALSE)
for(i in 2:341)
{
x[i] <- SPY_prices[i,5] > SPY_prices[i,8]
}
x
# started with 0 and adding 1000 during the first month
R[[1]] <- 1000.0
# for all the dates, getting the return at the end of the month assuming we add 1000 at the beginning
for(i in 2:341)
{
# adding 1000 for this month to the previous months returns times the monthly gain/loss
R[[i]] <- 1000 + R[[i-1]] + (R[[i-1]] * Ra[i, 3])
}
R
R[[12]]
R[[24]]
for(i in 2:341)
{
if(x[i])
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
for(i in 2:341)
{
if(x[[i]])
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
for(i in 2:341)
{
if(x[[i]] == TRUE)
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
for(i in 2:341)
{
if (x[[i]] == TRUE)
{
A[[i+1]] <- 1000 + A[[i]] + A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5])
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
A
for(i in 2:341)
{
if (x[[i]] == TRUE)
{
A[[i+1]] <- 1000 + A[[i]] + (A[[i]] * (SPY_prices[i,5]/SPY_prices[i-1,5]))
}
else
{
A[[i+1]] <- 1000 + A[[i]]
}
}
x
x <- c(TRUE, FALSE)
for(i in 2:341)
{
x[i] <- SPY_prices[i-1,5] > SPY_prices[i-1,8]
}
x
for(i in 3:341)
{
if (x[[i]])
{
A[[i]] <- 1000 + A[[i-1]] + (A[[i-1]] * (SPY_prices[i-1,5]/SPY_prices[i-2,5]))
}
else
{
A[[i]] <- 1000 + A[[i-1]]
}
}
A
A[[2]]
A[[3]]
for(i in 3:341)
{
if (x[[i]])
{
A[[i]] <- 1000 + A[[i-1]] + A[[i-1]] * ((SPY_prices[i-1,5]/SPY_prices[i-2,5]) / 100)
}
else
{
A[[i]] <- 1000 + A[[i-1]]
}
}
A
A[[3]]
x
A[[4]]
A[[5]]
A[[3]]
A[[4]]
A[[12]]
A[[24]]
A[[36]]
A[[48]]
A[[60]]
A[[72]]
A[[84]]
A[[96]]
A[[108]]
A[[120]]
A[[132]]
A[[144]]
A[[156]]
A[[168]]
A[[180]]
A[[192]]
A[[204]]
A[[216]]
A[[228]]
A[[240]]
A[[252]]
A[[264]]
A[[276]]
A[[288]]
A[[300]]
A[[312]]
A[[324]]
A[[336]]
A[[341]]
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
A[[12]]
A[[24]]
A[[36]]
A[[48]]
A[[60]]
A[[72]]
A[[84]]
A[[96]]
A[[108]]
A[[120]]
A[[132]]
A[[144]]
A[[156]]
A[[168]]
A[[180]]
A[[192]]
A[[204]]
A[[216]]
A[[228]]
A[[240]]
A[[252]]
A[[264]]
A[[276]]
A[[288]]
A[[300]]
A[[312]]
A[[324]]
A[[336]]
A[[341]]
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
require(tidyquant)
require(quantmod)
require(tidyverse)
getSymbols("SPY")
x <- chartSeries(SPY)
Ra <- c("SPY") %>%
tq_get(get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly",
col_rename = "Ra")
Ra
R <- c(0, 1)
# started with 0 and adding 1000 during the first month
R[[1]] <- 1000.0
# for all the dates, getting the return at the end of the month assuming we add 1000 at the beginning
for(i in 2:341)
{
# adding 1000 for this month to the previous months returns times the monthly gain/loss
R[[i]] <- 1000 + R[[i-1]] + (R[[i-1]] * Ra[i, 3])
}
R
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
R[[12]]
R[[24]]
R[[36]]
R[[48]]
R[[60]]
R[[72]]
R[[84]]
R[[96]]
R[[108]]
R[[120]]
R[[132]]
R[[144]]
R[[156]]
R[[168]]
R[[180]]
R[[192]]
R[[204]]
R[[216]]
R[[228]]
R[[240]]
R[[252]]
R[[264]]
R[[276]]
R[[288]]
R[[300]]
R[[312]]
R[[324]]
R[[336]]
R[[341]]
tq_mutate_fun_options()
SPY_prices <-  tq_get("SPY", get  = "stock.prices",
from = "1991-01-01",
to   = "2021-05-07")
col_name <- "close"
mutate <- c("MACD", "SMA")
SPY_prices <- tq_mutate_xy_(SPY_prices, x = col_name, mutate_fun = mutate[[2]])
SPY_prices <- tq_transmute(SPY_prices, mutate_fun = to.monthly)
A <- c(1000,0)
A[[1]] <- 1000
# we couldn't get the SMA at the end of January 1991 the way we implemented it, so we assumed to invest
A[[2]] <- 2000 + 1000 * (Ra[2,3])
x <- c(TRUE, FALSE)
for(i in 2:341)
{
x[i] <- SPY_prices[i-1,5] > SPY_prices[i-1,8]
}
x
for(i in 3:341)
{
if (x[[i]])
{
A[[i]] <- 1000 + A[[i-1]] + A[[i-1]] * ((SPY_prices[i-1,5]/SPY_prices[i-2,5]) / 100)
}
else
{
A[[i]] <- 1000 + A[[i-1]]
}
}
A
A[[12]]
A[[24]]
A[[36]]
A[[48]]
A[[60]]
A[[72]]
A[[84]]
A[[96]]
A[[108]]
A[[120]]
A[[132]]
A[[144]]
A[[156]]
A[[168]]
A[[180]]
A[[192]]
A[[204]]
A[[216]]
A[[228]]
A[[240]]
A[[252]]
A[[264]]
A[[276]]
A[[288]]
A[[300]]
A[[312]]
A[[324]]
A[[336]]
A[[341]]
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = A[], xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = A[[1]], xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = A[[]], xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = R[[]], xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
View(R)
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
A <- c(1000,0)
A[1] <- 1000
# we couldn't get the SMA at the end of January 1991 the way we implemented it, so we assumed to invest
A[[2]] <- 2000 + 1000 * (Ra[2,3])
x <- c(TRUE, FALSE)
for(i in 2:341)
{
x[i] <- SPY_prices[i-1,5] > SPY_prices[i-1,8]
}
x
for(i in 3:341)
{
if (x[[i]])
{
A[i] <- 1000 + A[[i-1]] + A[[i-1]] * ((SPY_prices[i-1,5]/SPY_prices[i-2,5]) / 100)
}
else
{
A[i] <- 1000 + A[[i-1]]
}
}
A
A[[12]]
A[[24]]
A[[36]]
A[[48]]
A[[60]]
A[[72]]
A[[84]]
A[[96]]
A[[108]]
A[[120]]
A[[132]]
A[[144]]
A[[156]]
A[[168]]
A[[180]]
A[[192]]
A[[204]]
A[[216]]
A[[228]]
A[[240]]
A[[252]]
A[[264]]
A[[276]]
A[[288]]
A[[300]]
A[[312]]
A[[324]]
A[[336]]
A[[341]]
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
R <- c(0, 1)
# started with 0 and adding 1000 during the first month
R[1] <- 1000.0
# for all the dates, getting the return at the end of the month assuming we add 1000 at the beginning
for(i in 2:341)
{
# adding 1000 for this month to the previous months returns times the monthly gain/loss
R[i] <- 1000 + R[[i-1]] + (R[[i-1]] * Ra[i, 3])
}
R
"
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = R, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
plot(x = Ra[,2], y = A, xlab = "Year", ylab="Accumulated Return of SPY in Dollars")
View(Ra)
